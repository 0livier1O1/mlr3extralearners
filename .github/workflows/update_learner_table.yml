on:
  push:
  # for now, CRON jobs only run on the default branch of the repo (i.e. usually on master)
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron: "0 4 * * *"

name: Update learner table and pkgdown deploy

jobs:
  all:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - { os: ubuntu-latest, r: "release"}      

    env:
      # otherwise remotes::fun() errors cause the build to fail. Example: Unavailability of binaries
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      CRAN: ${{ matrix.config.cran }}
      TIC_DEPLOY_KEY: ${{ secrets.TIC_DEPLOY_KEY }}
      # we are not allowed to write to ~/.ccache on GH Actions
      # setting some ccache options
      CCACHE_BASEDIR: ${{ GITHUB.WORKSPACE }}
      CCACHE_DIR: ${{ GITHUB.WORKSPACE }}/.ccache
      CCACHE_NOHASHDIR: true
      CCACHE_SLOPPINESS: include_file_ctime
      # make sure to run `tic::use_ghactions_deploy()` to set up deployment
      id_rsa: ${{ secrets.id_rsa }}
      # prevent rgl issues because no X11 display is available
      RGL_USE_NULL: true
      LRNTABLE: true

    steps:
      - uses: actions/checkout@v2.2.0

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}
          Ncpus: 4

      - uses: r-lib/actions/setup-tinytex@master

      - uses: r-lib/actions/setup-pandoc@master

      - name: "[Linux] ccache"
        if: runner.os == 'Linux'
        run: |
          sudo apt install ccache libcurl4-openssl-dev
          mkdir -p ~/.R && echo -e 'CXX_STD = CXX14\n\nCC=ccache gcc -std=gnu99\nCXX=ccache g++\nCXX11=ccache g++ -std=gnu99\nCXX14=ccache g++ -std=gnu99\nC11=ccache g++\nC14=ccache g++\nFC=ccache gfortran\nF77=ccache gfortran' > $HOME/.R/Makevars

      - name: "[Stage] Prepare"
        run: |
          Rscript -e "if (!requireNamespace('remotes')) install.packages('remotes', type = 'source')"
          Rscript -e "if (getRversion() < '3.2' && !requireNamespace('curl')) install.packages('curl', type = 'source')"

      - name: "[Stage] Install"
        run: Rscript -e "remotes::install_github('ropensci/tic')" -e "print(tic::dsl_load())" -e "tic::prepare_all_stages()" -e "tic::before_install()" -e "tic::install()"

      - name: "[Stage] Before Deploy"
        run: |
          Rscript -e "tic::before_deploy()"

      - name: "[Stage] Deploy"
        run: Rscript -e "tic::deploy()"

      - name: "[Stage] After Deploy"
        run: Rscript -e "tic::after_deploy()"

      - name: "[Stage] Update learner table"
        run: |
          R CMD INSTALL .
          Rscript build_learner_table.R

      - name: Commit files
        run: |
          git add R/sysdata.rda
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git diff-index --quiet HEAD || git commit -m "Update learner table"

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
